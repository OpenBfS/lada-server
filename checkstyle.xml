<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
  "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
  "https://checkstyle.org/dtds/configuration_1_3.dtd">
<!--
Checkstyle configuration based on sun_checks.xml as provided with the
Maven Checkstyle plugin. Some design related checks where removed.
-->

<module name="Checker">
  <!--
      If you set the basedir property below, then all reported file
      names will be relative to the specified directory. See
      http://checkstyle.sourceforge.net/5.x/config.html#Checker

  <property name="basedir" value="${basedir}"/>
  -->

  <!-- Checks that each Java package has a Javadoc file used for commenting. -->
  <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage       -->
  <!--<module name="JavadocPackage">
      <property name="allowLegacy" value="true"/>
      </module>-->

  <!-- Checks whether files end with a new line.                        -->
  <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
  <module name="NewlineAtEndOfFile"/>

  <!-- Checks that property files contain the same keys.         -->
  <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
  <module name="Translation"/>

  <module name="FileLength">
    <property name="severity" value="warning"/>
  </module>

  <!-- Following interprets the header file as regular expressions. -->
  <module name="RegexpHeader">
    <property name="headerFile" value="java.header"/>
  </module>

  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>

  <module name="RegexpSingleline">
    <!-- \s matches whitespace character, $ matches end of line. -->
    <property name="format" value="\s+$"/>
    <property name="message" value="Line has trailing spaces."/>
  </module>

  <module name="TreeWalker">

    <!-- <property name="cacheFile" value="${checkstyle.cache.file}"/> -->

    <!-- required for SuppressWarningsFilter (and other Suppress* rules not used here) -->
    <!-- see http://checkstyle.sourceforge.net/config_annotation.html#SuppressWarningsHolder -->
    <module name="SuppressWarningsHolder"/>

    <!-- Checks for Javadoc comments.                     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
    <!-- <module name="JavadocType">
      <property name="severity" value="warning"/>
    </module>
    <module name="JavadocMethod">
      <property name="severity" value="warning"/>
      <property name="scope" value="protected"/>
      <property name="validateThrows" value="true"/>
      <property name="allowMissingPropertyJavadoc" value="true"/>
      <property name="tokens" value="METHOD_DEF"/>
    </module>
    <module name="JavadocVariable">
      <property name="severity" value="warning"/>
      <property name="scope" value="protected"/>
    </module>
    <module name="JavadocStyle">
      <property name="severity" value="warning"/>
    </module> -->


    <!-- Checks for Naming Conventions.                  -->
    <!-- See http://checkstyle.sf.net/config_naming.html -->
    <module name="ConstantName">
      <property name="severity" value="warning"/>
    </module>
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName">
      <property name="severity" value="warning"/>
    </module>
    <module name="MemberName">
      <property name="severity" value="warning"/>
    </module>
    <module name="MethodName"/>
    <module name="PackageName"/>
    <module name="ParameterName"/>
    <module name="StaticVariableName">
      <property name="severity" value="warning"/>
    </module>
    <module name="TypeName">
      <property name="severity" value="warning"/>
    </module>


    <!-- Checks for Headers                                -->
    <!-- See http://checkstyle.sf.net/config_header.html   -->
    <!-- <module name="Header">                            -->
    <!-- The follow property value demonstrates the ability     -->
    <!-- to have access to ANT properties. In this case it uses -->
    <!-- the ${basedir} property to allow Checkstyle to be run  -->
    <!-- from any directory within a project. See property      -->
    <!-- expansion,                                             -->
    <!-- http://checkstyle.sf.net/config.html#properties        -->
    <!-- <property                                              -->
    <!--     name="headerFile"                                  -->
    <!--     value="${basedir}/java.header"/>                   -->
    <!-- </module> -->


    <!-- Checks for imports                              -->
    <!-- See http://checkstyle.sf.net/config_import.html -->
    <module name="AvoidStarImport">
      <property name="severity" value="warning"/>
    </module>
    <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
    <module name="RedundantImport"/>
    <module name="UnusedImports"/>


    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="LineLength">
      <property name="severity" value="warning"/>
    </module>
    <module name="MethodLength">
      <property name="severity" value="warning"/>
    </module>
    <module name="ParameterNumber"/>


    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="EmptyForIteratorPad"/>
    <module name="MethodParamPad">
      <property name="severity" value="warning"/>
    </module>
    <module name="NoWhitespaceAfter">
      <property name="severity" value="warning"/>
    </module>
    <module name="NoWhitespaceBefore">
      <property name="severity" value="warning"/>
    </module>
    <module name="OperatorWrap">
      <property name="severity" value="warning"/>
    </module>
    <module name="ParenPad">
      <property name="severity" value="warning"/>
    </module>
    <module name="TypecastParenPad"/>
    <module name="WhitespaceAfter">
      <property name="severity" value="warning"/>
    </module>
    <module name="WhitespaceAround">
      <property name="severity" value="warning"/>
    </module>


    <!-- Modifier Checks                                    -->
    <!-- See http://checkstyle.sf.net/config_modifiers.html -->
    <module name="ModifierOrder">
      <property name="severity" value="warning"/>
    </module>
    <module name="RedundantModifier">
      <property name="severity" value="warning"/>
    </module>


    <!-- Checks for blocks. You know, those {}'s         -->
    <!-- See http://checkstyle.sf.net/config_blocks.html -->
    <module name="AvoidNestedBlocks"/>
    <module name="EmptyBlock"/>
    <module name="LeftCurly">
      <property name="severity" value="warning"/>
    </module>
    <module name="NeedBraces"/>
    <module name="RightCurly">
      <property name="severity" value="warning"/>
    </module>


    <!-- Checks for common coding problems               -->
    <!-- See http://checkstyle.sf.net/config_coding.html -->
    <module name="PackageDeclaration"/>
    <module name="EmptyStatement">
      <property name="severity" value="warning"/>
    </module>
    <module name="EqualsHashCode"/>
    <module name="HiddenField">
      <property name="severity" value="warning"/>
      <property name="ignoreSetter" value="true"/>
    </module>
    <module name="IllegalInstantiation"/>
    <module name="InnerAssignment">
      <property name="severity" value="warning"/>
    </module>
    <module name="MagicNumber">
      <property name="severity" value="warning"/>
      <property name="constantWaiverParentToken" value="ASSIGN,ARRAY_INIT,EXPR,
      UNARY_PLUS, UNARY_MINUS, TYPECAST, ELIST, DIV, PLUS "/>
    </module>
    <module name="MissingSwitchDefault"/>
    <module name="SimplifyBooleanExpression">
      <property name="severity" value="warning"/>
    </module>
    <module name="SimplifyBooleanReturn"/>

    <!-- Checks for class design                         -->
    <!-- See http://checkstyle.sf.net/config_design.html -->
    <module name="HideUtilityClassConstructor">
      <property name="severity" value="warning"/>
    </module>
    <module name="InterfaceIsType"/>


    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="ArrayTypeStyle">
      <property name="severity" value="warning"/>
    </module>
    <module name="TodoComment">
      <property name="severity" value="warning"/>
      <property name="format" value="(?i)\b(todo|fix(me)?)\b"/>
    </module>
    <module name="UpperEll">
      <property name="severity" value="warning"/>
    </module>

  </module>

  <!-- Support @SuppressWarnings (added in Checkstyle 5.7) -->
  <!-- see http://checkstyle.sourceforge.net/config.html#SuppressWarningsFilter -->
  <module name="SuppressWarningsFilter"/>

  <!-- Checks properties file for a duplicated properties. -->
  <!-- See http://checkstyle.sourceforge.net/config_misc.html#UniqueProperties -->
  <module name="UniqueProperties"/>

</module>
